import { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from "recharts";

interface VulnerabilityChartProps {
  critical: number;
  high: number;
  medium: number;
  low: number;
}

export default function VulnerabilityChart({
  critical,
  high,
  medium,
  low
}: VulnerabilityChartProps) {
  const data = [
    { name: "Critical", value: critical, color: "#ef4444" },
    { name: "High", value: high, color: "#f97316" },
    { name: "Medium", value: medium, color: "#eab308" },
    { name: "Low", value: low, color: "#3b82f6" }
  ].filter(item => item.value > 0);
  
  const total = critical + high + medium + low;
  
  const CustomTooltip = ({ active, payload }: any) => {
    if (active && payload && payload.length) {
      return (
        <div className="bg-secondary-900 p-2 border border-secondary-700 rounded-md shadow-md">
          <p className="font-semibold">{payload[0].name}</p>
          <p className="text-sm">
            <span>{payload[0].value}</span>
            <span className="ml-1 text-muted-foreground">
              ({Math.round((payload[0].value / total) * 100)}%)
            </span>
          </p>
        </div>
      );
    }
    return null;
  };
  
  if (total === 0) {
    return (
      <div className="flex flex-col items-center justify-center h-52">
        <div className="text-3xl font-bold text-green-500 mb-2">0</div>
        <p className="text-muted-foreground text-center">
          No vulnerabilities detected
        </p>
      </div>
    );
  }
  
  return (
    <div className="relative h-52">
      <div className="absolute inset-0 flex flex-col items-center justify-center">
        <div className="text-3xl font-bold">{total}</div>
        <p className="text-xs text-muted-foreground">Total</p>
      </div>
      <ResponsiveContainer width="100%" height="100%">
        <PieChart>
          <Pie
            data={data}
            cx="50%"
            cy="50%"
            innerRadius={60}
            outerRadius={80}
            paddingAngle={2}
            dataKey="value"
          >
            {data.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={entry.color} />
            ))}
          </Pie>
          <Tooltip content={<CustomTooltip />} />
        </PieChart>
      </ResponsiveContainer>
      
      <div className="flex justify-center mt-4 flex-wrap gap-x-4 gap-y-2">
        {data.map((entry, index) => (
          <div key={index} className="flex items-center text-xs">
            <div
              className="w-3 h-3 rounded-full mr-1"
              style={{ backgroundColor: entry.color }}
            />
            <span>{entry.name}: {entry.value}</span>
          </div>
        ))}
      </div>
    </div>
  );
}